# This policy requires resources of type `aws_mskconnect_connector` to have encryption in transit enabled.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":                       "msk-connect-connector-encrypted",
	"message":                           "MSK Connect connectors should be encrypted in transit. Ensure 'kafka_cluster_encryption_in_transit' is configured with 'encryption_type' set to 'TLS'. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/msk-controls.html#msk-3 for more details.",
	"resource_aws_mskconnect_connector": "aws_mskconnect_connector",
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_mskconnect_connector).resources

violations = collection.reject(resources, func(res) {
	encryption_in_transit = maps.get(res.values, "kafka_cluster_encryption_in_transit", null)
	encryption_type = maps.get(encryption_in_transit[0], "encryption_type", "")
	return encryption_type == "TLS"
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
