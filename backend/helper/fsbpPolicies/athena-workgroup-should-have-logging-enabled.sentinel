# This policy requires resources of type `aws_athena_workgroup` have attribute `publish_cloudwatch_metrics_enabled` should be `true`.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":                        "athena-workgroup-should-have-logging-enabled",
	"message":                            "Attribute 'publish_cloudwatch_metrics_enabled' must be set to 'true' for 'aws_athena_workgroup' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/athena-controls.html#athena-4 for more details.",
	"resource_aws_athena_workgroup":      "aws_athena_workgroup",
	"publish_cloudwatch_metrics_enabled": "publish_cloudwatch_metrics_enabled",
	"configuration":                      "configuration",
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_athena_workgroup).resources
violations = collection.reject(resources, func(res) {
	configuration_block = maps.get(res.values, const.configuration, null)
	if configuration_block is null or configuration_block is empty {
		return false
	}
	cloudwatch_enabled = maps.get(configuration_block[0], const.publish_cloudwatch_metrics_enabled, null)
	if cloudwatch_enabled is null {
		return false
	}
	return cloudwatch_enabled is true
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
