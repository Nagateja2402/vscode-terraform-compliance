# This control checks whether an Amazon Redshift Serverless namespace is configured to export connection and user logs to Amazon CloudWatch Logs.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name": "redshift-serverless-namespaces-should-export-logs-to-cloudwatch-logs",
	"message":     "Redshift Serverless namespaces should export logs to CloudWatch Logs. Both 'connectionlog' and 'userlog' should be configured. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/redshiftserverless-controls.html#redshiftserverless-6 for more details.",
	"resource_aws_redshiftserverless_namespace": "aws_redshiftserverless_namespace",
	"required_log_types":                        ["connectionlog", "userlog"],
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_redshiftserverless_namespace).resources
violations = collection.reject(resources, func(res) {
	values = maps.get(res, "values", {})
	log_exports = maps.get(values, "log_exports", [])

	if log_exports is [] or log_exports is null {
		return false
	}

	required_logs_count = collection.filter(const.required_log_types, func(log_type) {
		return log_type in log_exports
	})

	return length(required_logs_count) == length(const.required_log_types)
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
