# This policy requires resources of type `aws_ecs_task_set` have attribute `assign_public_ip` should be false.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":               "ecs-task-set-assign-public-ip-disabled",
	"message":                   "Attribute 'assign_public_ip' must be either false for 'aws_ecs_task_set' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/ecs-controls.html#ecs-16 for more details.",
	"resource_aws_ecs_task_set": "aws_ecs_task_set",
	"assign_public_ip":          "assign_public_ip",
	"network_configuration":     "network_configuration",
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_ecs_task_set).resources
violations = collection.reject(resources, func(res) {
	network_configuration_values = maps.get(res.values, const.network_configuration, {})
	if network_configuration_values is null or network_configuration_values is empty {
		return true
	}
	return maps.get(network_configuration_values[0], const.assign_public_ip, false) is false
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
